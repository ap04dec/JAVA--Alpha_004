package Arrays;

public class Prefix_SubArray_sum {

    public static void  Sa(int numbers[]) {
        int currsum=0;
        int maxsum=Integer.MIN_VALUE;
        int prefix []= new int[numbers.length];
          prefix[0]= numbers[0];
          //calculate prefix arrays {

          for (int i=1;i<prefix.length;i++)
{
    prefix[i]= prefix[i-1]+numbers[i];
}

        for(int i=0;i<numbers.length;i++){
           int start=i;
            for(int j=i;j<numbers.length;j++){
                int end =j;   
                currsum =start == 0 ? prefix[end]: prefix[end]- prefix[start-1];
               /* for(int k=start;k<=end;k++){
                    //System.out.print(numbers[k]+" ");
                    currsum += numbers[k];
                }/* */
                if(maxsum<currsum)
                {
                    maxsum = currsum;
                }
                
            } 
            
        }
        System.out.print("max sum= "+ maxsum);
    }
    
    public static void main(String args[]){
        int numbers[]={1 ,2,3,4,5};
        Sa(numbers);
        
    }
}


